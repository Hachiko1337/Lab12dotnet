//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace PostCommentBun
{
    using System;
    using System.Collections.Generic;
    using System.Data.Entity;
    using System.Linq;
    using System.Runtime.Serialization;
    [DataContract(IsReference = true)]
    public partial class Comment
    {
        [DataMember]
        public int CommentId { get; set; }
        [DataMember]
        public string Text { get; set; }
        [DataMember]
        public int PostPostId { get; set; }
        [DataMember]
        public virtual Post Post { get; set; }

        public bool AddComment()
        {
            using (Model1Container ctx = new Model1Container())
            {
                bool bResult = false;
                if (this == null || this.PostPostId == 0)
                {
                    return bResult;
                }

                if (this.CommentId == 0)
                {
                    ctx.Entry<Comment>(this).State = EntityState.Added;
                    Post p = ctx.Posts.Find(this.PostPostId);
                    ctx.Entry<Post>(p).State = EntityState.Unchanged;
                    ctx.SaveChanges();
                    bResult = true;
                }

                return bResult;
            }
        }

        public Comment UpdateComment(Comment newComment)
        {
            using (Model1Container ctx = new Model1Container())
            {
                Comment oldComment = ctx.Comments.Find(newComment.CommentId);
                if (newComment.Text != null)
                {
                    oldComment.Text = newComment.Text;
                }

                if ((oldComment.PostPostId != newComment.PostPostId) && newComment.PostPostId != 0)
                {
                    oldComment.PostPostId = newComment.PostPostId;
                }

                ctx.SaveChanges();
                return oldComment;
            }
        }

        public Comment GetCommentById(int id)
        {
            using (Model1Container ctx = new Model1Container())
            {
                return ctx.Comments.Where(c => c.CommentId==id).ToList()[0];
            }
        }
    }

}
